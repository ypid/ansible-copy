---

- name: Ensure that parent directories exist
  shell: mkdir --parents $(dirname "{{ item.dest }}")
  changed_when: False
  when: (
          item is mapping and (
            (item.create_parent_dirs is defined and item.create_parent_dirs) or
            item.create_parent_dirs is undefined or
            not item.create_parent_dirs
          )
        )
  with_flattened:
    - copy_files_list
    - copy_files_group_list
    - copy_files_host_list

- name: Copy files to target system
  copy:
    src:   '{{ item.src }}'
    dest:  '{{ item.dest }}'
    owner: '{{ item.owner | default(omit) }}'
    group: '{{ item.group | default(omit) }}'
    mode:  '{{ item.mode  | default(omit) }}'
    selevel:  '{{ item.selevel  | default(omit) }}'
    serole:   '{{ item.serole   | default(omit) }}'
    setype:   '{{ item.setype   | default(omit) }}'
    seuser:   '{{ item.seuser   | default(omit) }}'
    backup:   '{{ item.backup   | default(omit) }}'
    validate: '{{ item.validate | default(omit) }}'
  when: (
          item is mapping and (
            item.state is string and item.state == 'present' or
            item.state is undefined
          )
        )
  with_flattened:
    - copy_files_list
    - copy_files_group_list
    - copy_files_host_list

- name: Delete files if state is absent
  file:
    path: '{{ item.dest }}'
    state: 'absent'
  when: (item.state is string and item.state == 'absent')
  with_flattened:
    - copy_files_list
    - copy_files_group_list
    - copy_files_host_list
